
name: Docker Build & Deploy to EC2

on:
  push:
    branches: [ "main" ]  # main 브랜치에 push될 때 자동 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # (1) 코드 체크아웃
      - name: Check out code
        uses: actions/checkout@v3

      # (2) Docker Hub 로그인
      - name: Docker Login
        run: |
          echo "${{ secrets.dcmall45 }}" | docker login -u "${{ secrets.root }}" --password-stdin

      # (3) Docker Build (Dockerfile 기반)
      - name: Build Docker Image
        run: |
          docker build -t myrepo/myapp:latest .

      # (4) Docker Hub에 Push
      - name: Push Docker Image
        run: |
          docker push myrepo/myapp:latest

      # (5) SSH로 EC2 접속 → 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.11
        with:
          host: ${{ secrets.43.202.190.81 }}
          username: ${{ secrets.ubuntu }}
          key: ${{ secrets.-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEApVJs+wSxnFiZ83PV0vCS+FDWAopxb6WwMT4+nBSBF5tWjgp/
CR3fy4w0tU/cBmABUnzM3In+Lkr/Cm+rDi+mjWHChhTMojF2PnU1tjUtpVaoL2u2
owxhyfwUnbQTjYET682VN43eJR+q/y7f04gNm4BCKJ1KkjGH6wlsEtvLOwJnAw9+
PAIHHPQuonJcPdP5LOXJwVmN1p7ar6U8nc6OtYNsYCN6Qpg9Fw+ez2gKiZwr47Ja
XxnZDxTkKJIazXFDWLlthKnnUF2yf7iSuvVdEYswAAUzEHZec9T3Si/EXq9kANr8
lUoDDIWlRV6xZfdDao8ECWbOUQQV3tRiO0WRwQIDAQABAoIBADlSrz8KjZssjZUA
oS+XAx7eyJXw8wxHYyRv9L2hznElB4oQ0aOTnDmzz8Legegj+dFkPJRrtJrQnkY8
Gg+9Lf7v2scrBxlmFR3q/kjDf6RIu+BVdOpsLKwgn/VerzjtfL7Sdd7hbhlpNZ1t
32Y1UqKMgmQaxfSTABHbHoIbfAhlaf+P6LWDCyFhwx5Hj5ICbswY6XKS3d68NdBF
DVtsPqq7MmuPcLeekIQVcPqsLch/rpUjqRqtF5BpTIUL7ve2QXEvdKR0iDoMQEm0
xbRUdv0x6PteCMuOgu+7AkWjB4XqltweU6yBrqxMSYcCSMhu2NK0uxd7lxpdctaV
JUge9sECgYEA2Jm7p8Bn1KHIS+rDJ2DwQitZ4vB8QR7Pl1G87rtrPX6xasN22jse
MKZs8k1024M8veEBQYO60qtIP9ToWLDUZfXHq2X9XZh9p9hGCHq87Z6ZSlQc2EL1
hoipueKPfJE7r4MICUm97/eZ/ZroZmzf07UREhPGMlXMKkeUItb8CDUCgYEAw2TY
Rf8Y82OMcurBTP+nukRgn82dzTfakVHMZGkEQcTtKn9oZbqbtXCF9QMKedIshPuu
jF7tzYEJA+C/qJC5mgY9n3e/0SiGqAkKc8wdc1nKN7dGQ1oyOfMIbdb1+eyFc2+S
JyFO7xl7yg51NrWXlHZjEVIQvZ74JK9E+xAQDN0CgYEAwMqNUjIa+RMLMi+ChuFs
2Ki3eByvrFLdWYXCkge122WSS0Ix3urx40GvBTjWQ7CbdzL4KDU1K+CTDWXXbWHv
m9VZZQEBtLZPWf9RzqhY03PwY01c400uNxIbaD31k12972nE1GeTrS0JHscsBkbw
LwMib6G0LwdZE2TkwOH0MOUCgYAVtTF17VZnS+sBpWUeWdTXk9ssRdq/PvJQbMcJ
bMVlTSyQKSF/E9FSwhKP2uuiByCdEZ0dyTogN7K5tJF2d8W2//R+r/4mjZsQNhjs
LoQjGZmmwPzUZMPpvj90fIpNXuKgpYeWQ1QSqkEffKW3E0uo2dI9zWFAv9WPtc0z
G2C9HQKBgCNMD3fXm9Rf0JuQcef/uweKuLcS+PS8gHViuN73gCb/TYyF6Va4ZvZC
AzyBeIyZbnQOYerdYgngAy882w5X7//RA8hW2Rw5ht/1l1XgC3SSy+SOyXYsttc2
rl/QIl7AyE8/azmMOAgDKIDzAgNiLk+qmsTQk3MR6xbfzdIk/p4u
-----END RSA PRIVATE KEY-----
 }}
          script: |
            docker pull myrepo/myapp:latest
            docker stop myapp || true
            docker rm myapp || true
            # 80:8080 으로 매핑 (Spring Boot의 8080)
            docker run -d --name myapp -p 80:8080 myrepo/myapp:latest
